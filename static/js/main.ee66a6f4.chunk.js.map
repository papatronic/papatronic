{"version":3,"sources":["assets/TecNM-ITC-Logo.png","redux/fetchPredictions.js","redux/fetchCities.js","redux/chartProperties.js","redux/mainReducer.js","constants/strings.js","utils/index.js","components/DailyPrice.js","components/Table.js","components/Chart.js","components/PredictionSection.js","components/Nav.js","components/Select.js","components/Card.js","components/Logos.js","components/Loading.js","components/Dialog.js","components/Footer.js","routes/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","FETCH_PREDICTION_BEGIN","FETCH_PREDICTION_SUCCESS","FETCH_PREDICTION_FAILURE","_callee","type","id","response","regenerator_default","a","wrap","_context","prev","next","rp","method","json","uri","concat","process","body","sent","abrupt","t0","stop","fetchPredictionsBegin","fetchPredictionsSuccess","predictions","payload","fetchPredictionsFailure","error","fetchPrediction","dispatch","getPrediction","then","catch","FETCH_CITIES_BEGIN","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","origins","destinations","fetchCitiesBegin","fetchCitiesSuccess","cities","originCities","fetchCitiesFailure","fetchCities","getCities","_ref","Object","toConsumableArray","SELECTED_CITY","initialState","city","loading","combineReducers","predictionsReducer","state","arguments","length","undefined","action","_objectSpread","JSON","parse","stringify","someValue","InstitutionName","DailyPriceText","About","ErrorInRequestModal","AboutTheSite","currencyFormatter","Intl","NumberFormat","currency","style","formatWeekDays","data","weekDays","index","daySum","day","moment","add","isoWeekDay","isoWeekday","dayS","format","date","month","precio","shift","push","dia","useStyles","makeStyles","card","minWidth","title","fontSize","pos","marginBottom","subtitle","textAlign","DailyPrice","props","classes","prediction","react_default","createElement","Card","className","CardContent","Typography","color","gutterBottom","getPriceDay","variant","component","root","width","overflowX","table","MyTable","formattedWeekDays","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","styles","fontFamily","height","Chart","nivo_bar_esm","keys","indexBy","margin","top","right","bottom","left","padding","colors","scheme","defs","background","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","PredictionSection","shared","Fragment","theme","menuButton","marginRight","defineProperty","flexGrow","breakpoints","down","Nav","AppBar","position","Toolbar","Button","onClick","handleOpen","select","marginTop","formControl","display","maxWidth","MySelect","formClassName","selectClassName","FormControl","Select","value","selectedMarket","onChange","event","handleOnChange","displayEmpty","name","markets","market","MenuItem","FormHelperText","cardActions","flexDirection","justifyContent","FilterCard","cardContent","CardActions","components_Select","handleOnSelect","handleOnFilter","Logos","src","tecNMItcLogo","alt","Loading","CircularProgress","AlertDialog","Dialog","open","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","message","DialogActions","autoFocus","Footer","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","errorInRequest","modalOpen","aboutModalOpen","bind","assertThisInitialized","handleModalClose","switchAboutModal","target","findIndex","setState","errorMessage","prevState","_this$state","_this$props","predictionError","handleDirectionChange","Component","connect","App","store","react_redux_es","react_router_dom","react_router","exact","path","locale","months","split","weekdaysMin","weekdaysShort","weekdays","weekdaysParseExact","createStore","mainReducer","applyMiddleware","thunk","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ee66a6f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TecNM-ITC-Logo.3a73b6a0.png\";","import rp from 'request-promise'; \n\nexport const FETCH_PREDICTION_BEGIN = 'FETCH_PREDICTION_BEGIN';\nexport const FETCH_PREDICTION_SUCCESS = 'FETCH_PREDICTION_SUCCESS';\nexport const FETCH_PREDICTION_FAILURE = 'FETCH_PREDICTION_FAILURE';\n\nasync function getPrediction(type, id) {\n  try {\n    const response = await rp({\n      method: 'POST',\n      json: true,\n      uri: `${process.env.REACT_APP_PREDICT_EC2_ENDPOINT}/predict`,\n      body: { type, id }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const fetchPredictionsBegin = () => ({\n  type: FETCH_PREDICTION_BEGIN\n});\n\nexport const fetchPredictionsSuccess = predictions => ({\n  type: FETCH_PREDICTION_SUCCESS,\n  payload: { predictions }\n});\n\nexport const fetchPredictionsFailure = error => ({\n  type: FETCH_PREDICTION_FAILURE,\n  payload: { error }\n});\n\nexport function fetchPrediction(type, id) {\n  return dispatch => {\n    dispatch(fetchPredictionsBegin());\n    return getPrediction(type, id)\n    .then(predictions => {\n      dispatch(fetchPredictionsSuccess(predictions));\n      return predictions;\n    })\n    .catch(error => {\n      dispatch(fetchPredictionsFailure(error))\n    });\n  }\n}","import rp from 'request-promise'; \n\nexport const FETCH_CITIES_BEGIN = 'FETCH_CITIES_BEGIN';\nexport const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS';\nexport const FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE';\n\n\nasync function getCities() {\n  const origins = await rp({\n    uri: process.env.REACT_APP_ORIGIN_CITIES_LAMBDA_ENDPOINT,\n    json: true,\n  });\n  const destinations = await rp({\n    uri: process.env.REACT_APP_DESTINATION_CITIES_LAMBDA_ENDPOINT,\n    json: true,\n  });\n  return { origins, destinations };\n}\n\nexport const fetchCitiesBegin = () => ({\n  type: FETCH_CITIES_BEGIN\n});\n\nexport const fetchCitiesSuccess = (cities, originCities) => ({\n  type: FETCH_CITIES_SUCCESS,\n  payload: { cities, originCities }\n});\n\nexport const fetchCitiesFailure = error => ({\n  type: FETCH_CITIES_FAILURE,\n  payload: { error }\n});\n\nexport function fetchCities() {\n  return dispatch => {\n    dispatch(fetchCitiesBegin());\n    return getCities()\n    .then(({ origins, destinations }) => {\n      return dispatch(fetchCitiesSuccess([...origins, ...destinations], origins));\n    })\n    .catch(error => {\n      dispatch(fetchCitiesFailure(error))\n    });\n  }\n}","export const SELECTED_CITY = 'SELECTED_CITY';\n\nexport const setCity = city => ({\n  type: SELECTED_CITY,\n  payload: { city }\n});","import { combineReducers } from \"redux\";\n\nimport {\n  FETCH_PREDICTION_BEGIN,\n  FETCH_PREDICTION_SUCCESS,\n  FETCH_PREDICTION_FAILURE,\n} from './fetchPredictions';\n\nimport {\n  FETCH_CITIES_BEGIN,\n  FETCH_CITIES_SUCCESS,\n  FETCH_CITIES_FAILURE,\n} from './fetchCities';\n\nimport {\n  SELECTED_CITY\n} from './chartProperties';\n\nconst initialState = {\n  predictions: [],\n  cities: [],\n  originCities: [],\n  city: {},\n  loading: false,\n  error: null\n};\n\nfunction predictionsReducer(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_PREDICTION_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_PREDICTION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        predictions: JSON.parse(JSON.stringify(action.payload.predictions)),\n        city: 42,\n        someValue: JSON.parse(JSON.stringify(action.payload.predictions)),\n      };\n    case FETCH_PREDICTION_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        predictions: []\n      };\n    case FETCH_CITIES_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CITIES_SUCCESS:\n      return {\n        ...state,\n        cities: action.payload.cities,\n        originCities: action.payload.originCities,\n        city: action.payload.cities[0].id\n      };\n    case FETCH_CITIES_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        cities: []\n      };\n    case SELECTED_CITY:\n      return {\n        ...state,\n        city: action.payload.city,\n        predictions: state.someValue,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  predictionsReducer\n});","const NotFoundStrings = {\n  code: '404',\n  title: 'Página no encontrada',\n  body: 'La ruta a la que quieres acceder ha sido movida temporalmente, no existe o ha sido renombrada.',\n  buttonText: 'PÁGINA PRINCIPAL'\n}\n\nconst BrowserNotSupportedStrings = {\n  title: 'Tu navegador no es compatible con ésta aplicación.',\n  googleChromeDownloadLink: 'https://www.google.com/chrome/b/',\n  mozillaFirefoxDownloadLink: 'https://www.mozilla.org/en-US/firefox/new/'\n};\n\nconst ModalTexts = {\n  destinationCitiesError: '',\n  originCitiesError: '',\n  predictionError: ''\n};\n\nconst InstitutionName = 'Pronosticador del precio de la papa'\nconst DailyPriceText = 'Precio estimado para';\nconst About = 'Acerca de';\nconst Us = 'Nosotros';\n\nconst ErrorInRequestModal = {\n  title: 'Ocurrió un problema',\n  message: 'Al parecer ocurrió un problema conectando con nuestro servidor. Espere un momento y de click en continuar.'\n};\n\nconst AboutTheSite = {\n  title: 'Acerca de este sitio',\n  message: ''\n};\n\nexport { \n  NotFoundStrings as NFS,\n  BrowserNotSupportedStrings as BNSS,\n  ModalTexts as MSS,\n  InstitutionName,\n  DailyPriceText,\n  About,\n  Us,\n  AboutTheSite,\n  ErrorInRequestModal,\n};","import moment from 'moment';\nimport { DailyPriceText } from '../constants/strings';\n\nexport const currencyFormatter = new Intl.NumberFormat('es-MX', { currency: 'MXN', style: 'currency' });\n\nexport function formatWeekDays(data = []) {\n  const weekDays = [];\n  for (let index = 0, daySum = 0; index < 7; index++, daySum++) {\n    const day = moment().add(daySum, 'days');\n    const isoWeekDay = day.isoWeekday();\n    if (isoWeekDay !== 7 && isoWeekDay !== 6) {\n      const dayS = day.format('dd');\n      const date = day.date();\n      const month = day.format('MM');\n      const precio = data.length > 0 ? currencyFormatter.format(data.shift()) : currencyFormatter.format(0);\n      weekDays.push({ dia: `${dayS} ${date} de ${month}`, precio }); \n    }\n  }\n  return weekDays;\n}\n\nexport function getPriceDay() {\n  const isoWeekDay = moment().isoWeekday();\n  switch (isoWeekDay) {\n    case 6:\n    case 7:\n      return `${DailyPriceText} el próximo lunes`;\n    default:\n      return `${DailyPriceText} el día de hoy`;\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { currencyFormatter, getPriceDay } from '../utils';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: '100%',\n  },\n  title: {\n    fontSize: 20,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  subtitle: {\n    textAlign: 'center'\n  }\n});\n\nexport default function DailyPrice(props) {\n  const classes = useStyles();\n\n  const precio = props.prediction ? props.prediction : 0;\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {getPriceDay()}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\" className={classes.subtitle}>\n          {currencyFormatter.format(precio)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { formatWeekDays, currencyFormatter } from '../utils/index';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: '98%',\n  },\n});\n\nexport default function MyTable(props) {\n  const formattedWeekDays = formatWeekDays(props.prediction);\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Fecha</TableCell>\n            <TableCell align=\"left\">Precio</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {formattedWeekDays.map(row => (\n            <TableRow key={row.dia}>\n              <TableCell align=\"left\">{row.dia}</TableCell>\n              <TableCell align=\"left\">{currencyFormatter.format(row.precio)} MXN</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}","import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { formatWeekDays } from '../utils/index';\n\nconst styles = {\n  fontFamily: 'roboto',\n  height: '100px'\n};\n\nexport default function Chart(props) {\n  const formattedWeekDays = formatWeekDays(props.prediction);\n  return (\n        <ResponsiveBar\n            style={styles}\n            data={formattedWeekDays}\n            keys={['precio']}\n            indexBy='dia'\n            margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n            padding={0.3}\n            colors={{ scheme: 'nivo' }}\n            defs={[\n              {\n                  id: 'dots',\n                  type: 'patternDots',\n                  background: 'inherit',\n                  color: '#38bcb2',\n                  size: 4,\n                  padding: 1,\n                  stagger: true\n              },\n              {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: '#eed312',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10\n              }\n          ]}\n          fill={[\n              {\n                  match: {\n                      id: 'fries'\n                  },\n                  id: 'dots'\n              },\n              {\n                  match: {\n                      id: 'sandwich'\n                  },\n                  id: 'lines'\n              }\n          ]}\n          borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n          axisTop={null}\n          axisRight={null}\n          axisBottom={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: 'predicciones semanales',\n              legendPosition: 'middle',\n              legendOffset: 32\n          }}\n          axisLeft={{\n              tickSize: 5,\n              tickPadding: 5,\n              tickRotation: 0,\n              legend: 'precio',\n              legendPosition: 'middle',\n              legendOffset: -40\n          }}\n          labelSkipWidth={12}\n          labelSkipHeight={12}\n          labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n          legends={[\n              {\n                  dataFrom: 'keys',\n                  anchor: 'bottom-right',\n                  direction: 'column',\n                  justify: false,\n                  translateX: 120,\n                  translateY: 0,\n                  itemsSpacing: 2,\n                  itemWidth: 100,\n                  itemHeight: 20,\n                  itemDirection: 'left-to-right',\n                  itemOpacity: 0.85,\n                  symbolSize: 20,\n                  effects: [\n                      {\n                          on: 'hover',\n                          style: {\n                              itemOpacity: 1\n                          }\n                      }\n                  ]\n              }\n          ]}\n          animate={true}\n          motionStiffness={90}\n          motionDamping={15}\n        />\n  );\n}\n","import React from 'react';\nimport DailyPrice from './DailyPrice';\nimport MyTable from './Table';\nimport Chart from './Chart';\nimport '../styles/prediction-section.css';\n\nexport default function PredictionSection(props) {\n  \n  const shared = props.predictions.length > 0 ? [...props.predictions] : [];\n  return (\n    <>\n     <div className=\"Chart\">\n       <Chart prediction={props.predictions} />\n     </div>\n     <div className=\"DailyAndTable\">\n       <DailyPrice prediction={props.predictions[0]} />\n       <MyTable prediction={shared} />\n     </div>\n    </>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { InstitutionName, About } from '../constants/strings';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: '0.9em',\n    [theme.breakpoints.down('1000')]: {\n      fontSize: '0.6em',\n    }\n  },\n}));\n\nexport default function Nav(props) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          {InstitutionName}\n        </Typography>\n        <Button onClick={props.handleOpen} color=\"inherit\">{About}</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport '../styles/select.css';\n\nconst useStyles = makeStyles(theme => ({\n  select: {\n    minWidth: '100%',\n    fontSize: '0.3em',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    fontSize: 'calc(1em + 1vw)',\n    display: 'flex',\n    minWidth: '100%',\n    maxWidth: '100%'\n  },\n}));\n\n\nfunction MySelect(props) {\n  const classes = useStyles();\n  const formClassName = `${classes.formControl} FormSize`;\n  const selectClassName =  `${classes.select} SelectSize`\n  return (\n    <FormControl className={formClassName}>\n      <Select\n        value={props.selectedMarket}\n        onChange={(event) => props.handleOnChange(event)}\n        displayEmpty\n        name=\"markets\"\n        className={selectClassName}\n      >\n        {props.markets.map(market => <MenuItem style={{fontSize: '0.8em'}} key={market.id} value={market.id}>{market.city}</MenuItem>)}\n      </Select>\n      <FormHelperText style={{fontSize: '0.3em'}}>Seleccione un estado</FormHelperText>\n    </FormControl>\n  );\n}\n\nexport default MySelect;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '../components/Select';\nimport Button from '@material-ui/core/Button';\nimport '../styles/card.css';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '45%',\n    maxWidth: '90%'\n  },\n  title: {\n    fontSize: '0.7em',\n  },\n  subtitle: {\n    fontSize: '0.5em',\n  },\n  cardActions: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    height: '45%',\n  },\n});\n\nexport default function FilterCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.cardContent}>\n        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n          Cambiar estado\n        </Typography>\n        <Typography className={classes.subtitle} color=\"textSecondary\" gutterBottom>\n          Seleccione el estado del cual busca obtener predicciones\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Select selectedMarket={props.selectedMarket} handleOnChange={props.handleOnSelect} markets={props.markets} />\n        <Button className=\"FilterButton\" onClick={props.handleOnFilter} variant=\"contained\">\n          Predecir\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\nimport tecNMItcLogo from '../assets/TecNM-ITC-Logo.png';\nimport '../styles/logos.css';\n\nexport default function Logos() {\n  return (\n    <div className=\"ImageContainer\">\n      <img className=\"TecNMSize\" src={tecNMItcLogo} alt=\"Logo horizontal del Tecnológico Nacional de México seguido del logo del Instituto Tecnológico de Culiacán\"></img>\n    </div>\n  )\n}","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../styles/loading.css';\n\nexport default function Loading() {\n  return (\n    <div className=\"Loading\">\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n  return (\n    <>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n            Continuar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import React from 'react';\nimport '../styles/footer.css';\n\nexport default function Footer() {\n  return (\n    <footer className=\"Footer\">\n      <h6 className=\"FooterText\">Tecnológico Nacional de México | Instituto Tecnológico de Culiacán</h6>\n    </footer>\n  )\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PredictionSection from '../components/PredictionSection';\nimport Nav from '../components/Nav';\nimport FilterCard from '../components/Card';\nimport Logos from '../components/Logos';\nimport Loading from '../components/Loading';\nimport Dialog from '../components/Dialog';\nimport Footer from '../components/Footer';\nimport { fetchPrediction } from '../redux/fetchPredictions';\nimport { fetchCities } from '../redux/fetchCities';\nimport { setCity } from '../redux/chartProperties';\nimport { ErrorInRequestModal, AboutTheSite } from '../constants/strings';\nimport '../styles/home.css';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errorInRequest: false,\n      modalOpen: false,\n      aboutModalOpen: true,\n    };\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnFilter = this.handleOnFilter.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.switchAboutModal = this.switchAboutModal.bind(this);\n  }\n\n  async handleOnSelect(event) {\n    this.props.dispatch(setCity(event.target.value));\n  }\n\n  async handleOnFilter() {\n    const id = this.props.city;\n    const type = this.props.originCities.findIndex((market) => (market.id === id)) > -1 ? 0 : 1;\n    try {\n      this.props.dispatch(fetchPrediction(type, id));\n    } catch (error) {\n      await this.setState({ errorInRequest: true, modalOpen: true, errorMessage: 'Ocurrió un error al momento de consultar las ciudades disponibles. Inténtelo más tarde. Al hacer click en continuar se recargará el sitio.' });\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.props.dispatch(fetchCities());\n      this.props.dispatch(fetchPrediction(0, 42));\n    } catch (error) {\n      await this.setState({ errorInRequest: true });\n    }\n  }\n\n  async handleModalClose() {\n    await this.setState({\n      errorInRequest: false,\n    });\n  }\n\n  async switchAboutModal() {\n    await this.setState((prevState) => {\n      return { aboutModalOpen: !prevState.aboutModalOpen }\n    });\n  }\n\n  render() {\n    const { modalOpen, errorInRequest, aboutModalOpen } = this.state;\n    const { error: predictionError, loading, predictions, cities, city } = this.props;\n    return (\n      aboutModalOpen ? <Dialog open={aboutModalOpen} title={AboutTheSite.title} message={AboutTheSite.message} handleClose={this.switchAboutModal} /> :\n      (errorInRequest || predictionError) ? <Dialog open={modalOpen} title={ErrorInRequestModal.title} message={ErrorInRequestModal.message} handleClose={this.handleModalClose} /> :\n      <div className=\"Flex CustomFontSize\">\n        <div>\n          <Nav open={aboutModalOpen} title={AboutTheSite.title} message={AboutTheSite.message} handleOpen={this.switchAboutModal} />\n        </div>\n\n        <div className=\"PageElements\">\n\n          <div className=\"InformationElements\">\n            <div className=\"LogosAndFilter\">\n              <Logos />\n              <FilterCard\n                selectedMarket={city}\n                markets={cities}\n                handleOnSelect={this.handleOnSelect}\n                handleDirectionChange={this.handleDirectionChange}\n                handleOnFilter={this.handleOnFilter}\n              />\n            </div>\n\n            {loading ? <Loading /> : <PredictionSection predictions={predictions} />}\n          </div>\n\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => (state.predictionsReducer);\n\nexport default connect(mapStateToProps)(Home);","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Home from './routes/Home';\n\nfunction App({ store }) {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='*' component={Home} />\n        </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport mainReducer from './redux/mainReducer';\nimport thunk from \"redux-thunk\";\nimport './index.css';\nimport App from './App';\nimport moment from 'moment';\n\nmoment.locale('es', {\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  weekdaysMin: 'Do_Lu_Ma_Mie_Jue_Vie_Sa'.split('_'),\n  weekdaysShort: 'do._lun._ma._mie._jue._vie._sa.'.split('_'),\n  weekdays: 'domingo_lunes_martes_miercoles_jueves_viernes_sabado'.split('_'),\n  weekdaysParseExact : true,\n});\n\nconst store = createStore(\n  mainReducer,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));"],"sourceRoot":""}